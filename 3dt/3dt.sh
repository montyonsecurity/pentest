#!/bin/bash

if [[ "$1" -eq "" ]] 2> /dev/null;
then
	echo -e "\e[92m[+]\e[0m Command example"
	echo "bash 3dt.sh domain.top_level"
else
	#if hostname
	if echo $1 | grep -qP "^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9])\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9-]*[A-Za-z0-9])$";
	then
		#if FQDN
		if echo $1 | grep -qi "^[a-zA-Z0-9]*\.[a-zA-Z0-9]*\.[a-zA-Z0-9]*$";
		then
			echo -e "\e[93m[-]\e[0m Error: Do not specify a subdomain"
			exit
		fi
		echo -e "\e[92m[+]\e[0m Finding Hanging CNAMEs for $1 at $(date)" | tee -a documentation_$(echo $1 | tr '.' '_').txt
		touch "hanging_cnames_$(echo $1 | tr '.' '_').txt"
		for i in $(dnsenum -f /usr/share/seclists/Discovery/DNS/subdomains-top1million-20000.txt --enum --noreverse $1 2> /dev/null | grep CNAME | awk '{print $5}' | grep --color=never ".*\.$" | sed 's/.$//g' | sort -u)
		do
			echo -e "\e[92m[+]\e[0m Checking $i at $(date)" | tee -a documentation_$(echo $1 | tr '.:' '__').txt
			if $(nslookup $i | egrep -qi 'No answer|NXDOMAIN')
			then
				echo -e "\e[92m[+]\e[0m $i is thought to be hanging at $(date)" | tee -a documentation_$(echo $1 | tr '.' '_').txt
				echo -e "\e[92m[+]\e[0m Pulling related subdomain at $(date)" | tee -a documentation_$(echo $1 | tr '.' '_').txt
				dnsenum -f /usr/share/seclists/Discovery/DNS/subdomains-top1million-20000.txt --enum --noreverse $1 2> /dev/null | grep "$i" >> hanging_cnames_$(echo $1 | tr '.' '_').txt
			fi
		done
	fi
fi
