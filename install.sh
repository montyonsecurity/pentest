#!/bin/bash

PENTEST_DIR=$(pwd)
VAR=0
VAR=$1
HELP="
Raspberry Pi 3 (raspbian) - bash install.sh 1\nParrot OS - bash install.sh 2\nGoogle Cloud Platform F1 Instance - bash install.sh 3\n"

pi_install(){
	if [[ ! -f /usr/bin/pentest ]];
	then
		REBOOT_MSG=1
	fi

	if [ "$EUID" -ne 0 ]
	then
		echo -e "\e[91m[-]\e[0m Error: Permission Denied"
		echo -e "\e[93m[!]\e[0m Action: Run as root or with sudo"
		exit
	fi

	echo -e "\e[92m[+]\e[0m Checking repos"
	if cat /etc/apt/sources.list | grep -qi "^deb http://http.kali.org/kali kali-rolling main non-free contrib"
	then
		echo -e "\e[92m[+]\e[0m Repos are good"
	else
		echo -e "\e[92m[+]\e[0m Changing repos"
		echo "deb http://http.kali.org/kali kali-rolling main non-free contrib" > /etc/apt/sources.list
	fi

	echo -e "\e[92m[+]\e[0m Updating Repo Keys"
	wget -q -O - https://archive.kali.org/archive-key.asc | apt-key add 2> /dev/null 1>&2 
	wget -q -O - http://apt.metasploit.com/metasploit-framework.gpg.key | apt-key add 2> /dev/null 1>&2

	echo -e "\e[92m[+]\e[0m Installing System Packages"
	apt-get update
	apt-get -f install $(cat .apt-packages.txt) -y
	apt-get dist-upgrade -y
	apt-get autoremove -y
	gem install evil-winrm

	cd /opt/
	if ls | egrep -qi "zap-cli";
	then
		echo -e "\e[92m[+]\e[0m Updating OWASP ZAP CLI"
		cd zap-cli/
		git config pull.rebase false
		git pull
		pip3 install --upgrade zapcli
	else
		echo -e "\e[92m[+]\e[0m Installing OWASP ZAP CLI"
		git clone https://github.com/Grunny/zap-cli.git
		cd zap-cli; pip3 install --upgrade zapcli
		pip3 install --upgrade git+https://github.com/Grunny/zap-cli.git
	fi
	cd $PENTEST_DIR

	echo -e "\e[92m[+]\e[0m Installing myself"
	cp pentest.sh /usr/bin/pentest
	cp autowasp/autowasp.sh /usr/bin/autowasp
	cp 3dt/3dt.sh /usr/bin/3dt

	echo -e "\e[92m[+]\e[0m Done"

	if [[ "$REBOOT_MSG" -eq 1 ]]
	then
		echo -e "\e[93m[!]\e[0m Recommended: Reboot the device, for all updates to take effect"
	fi

	echo -e "\e[92m[+]\e[0m Happy Hunting!"
}

parrot_install(){
	if [[ ! -f /usr/bin/pentest ]];
	then
		REBOOT_MSG=1
	fi

	if [ "$EUID" -ne 0 ]
	then
		echo -e "\e[91m[-]\e[0m Error: Permission Denied"
		echo -e "\e[93m[!]\e[0m Action: Run as root or with sudo"
		exit
	fi

	echo -e "\e[92m[+]\e[0m Installing System Packages"
	apt-get update
	apt-get -f install $(cat .apt-packages.txt | grep -v seclists) -y
	apt-get dist-upgrade -y
	apt-get autoremove -y
	gem install evil-winrm

	cd /opt/
	if ls | egrep -qi "zap-cli";
	then
		echo -e "\e[92m[+]\e[0m Updating OWASP ZAP CLI"
		cd zap-cli/
		git config pull.rebase false
		git pull
		pip3 install --upgrade zapcli
	else
		echo -e "\e[92m[+]\e[0m Installing OWASP ZAP CLI"
		git clone https://github.com/Grunny/zap-cli.git
		cd zap-cli; pip3 install --upgrade zapcli
		pip3 install --upgrade git+https://github.com/Grunny/zap-cli.git
	fi
	
	cd /usr/share/
	if ls | egrep -qi "SecLists"
	then
		echo -e "\e[92m[+]\e[0m Updating SecLists"
		cd seclists/
		git config pull.rebase false
		git pull
	else
		echo -e "\e[92m[+]\e[0m Installing SecLists"
		git clone https://github.com/danielmiessler/SecLists.git
		mv SecLists seclists
	fi
	cd $PENTEST_DIR

	echo -e "\e[92m[+]\e[0m Installing myself"
	cp pentest.sh /usr/bin/pentest
	cp autowasp/autowasp.sh /usr/bin/autowasp
	cp 3dt/3dt.sh /usr/bin/3dt

	echo -e "\e[92m[+]\e[0m Done"

	if [[ "$REBOOT_MSG" -eq 1 ]]
	then
		echo -e "\e[93m[!]\e[0m Recommended: Reboot the device, for all updates to take effect"
	fi

	echo -e "\e[92m[+]\e[0m Happy Hunting!"

}

gcp_install(){
	if [[ ! -f /usr/bin/pentest ]];
	then
		REBOOT_MSG=1
	fi

	if [ "$EUID" -ne 0 ]
	then
		echo -e "\e[91m[-]\e[0m Error: Permission Denied"
		echo -e "\e[93m[!]\e[0m Action: Run as root or with sudo"
		exit
	fi

	echo -e "\e[92m[+]\e[0m Checking repos"
	if cat /etc/apt/sources.list.d/kali.list 2> /dev/null | grep -qi "^deb http://http.kali.org/kali kali-rolling main non-free contrib"
	then
		echo -e "\e[92m[+]\e[0m Repos are good"
	else
		echo -e "\e[92m[+]\e[0m Changing repos"
		echo "deb http://http.kali.org/kali kali-rolling main non-free contrib" > /etc/apt/sources.list.d/kali.list
	fi

	echo -e "\e[92m[+]\e[0m Updating Repo Keys and Installing Google Cloud SDK"
	echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | tee /etc/apt/sources.list.d/google-cloud-sdk.list 2> /dev/null 1>&2
	curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add - 2> /dev/null 1>&2
	apt-get update && apt-get install google-cloud-sdk 2> /dev/null 1>&2
	curl http://apt.metasploit.com/metasploit-framework.gpg.key | apt-key add 2> /dev/null 1>&2
	curl https://archive.kali.org/archive-key.asc | apt-key add 2> /dev/null 1>&2

	echo -e "\e[92m[+]\e[0m Installing System Packages"
	apt-get update
	apt-get -f install $(cat .apt-packages.txt) -y
	apt-get dist-upgrade -y
	apt-get autoremove -y
	gem install evil-winrm

	cd /opt/
	if ls | egrep -qi "zap-cli";
	then
		echo -e "\e[92m[+]\e[0m Updating OWASP ZAP CLI"
		cd zap-cli/
		git config pull.rebase false
		git pull
		pip3 install --upgrade zapcli
	else
		echo -e "\e[92m[+]\e[0m Installing OWASP ZAP CLI"
		git clone https://github.com/Grunny/zap-cli.git
		git config pull.rebase false
		cd zap-cli
		pip3 install --upgrade zapcli
		pip3 install --upgrade git+https://github.com/Grunny/zap-cli.git
	fi
	cd $PENTEST_DIR

	echo -e "\e[92m[+]\e[0m Installing myself"
	cp pentest.sh /usr/bin/pentest
	cp autowasp/autowasp.sh /usr/bin/autowasp
	cp 3dt/3dt.sh /usr/bin/3dt

	echo -e "\e[92m[+]\e[0m Done"

	if [[ "$REBOOT_MSG" -eq 1 ]]
	then
		echo -e "\e[93m[!]\e[0m Recommended: Reboot the device, for all updates to take effect"
	fi

	echo -e "\e[92m[+]\e[0m Happy Hunting!"

}

if $(uname -a | grep -qi "raspberrypi") || [[ $VAR -eq 1 ]];
then
	#raspberry pi install
	echo -e "\e[92m[+]\e[0m This looks to be a Raspberry Pi - running install"
	sleep 3
	pi_install
	exit
elif $(uname -a | grep -qi "parrot") || [[ $VAR -eq 2 ]];
then
	echo -e "\e[92m[+]\e[0m This looks to be Parrot OS - running install"
	sleep 3
	parrot_install
	exit
elif $(uname -a | grep -qi "cloud" && cat /etc/group | grep -qi "google") || [[ $VAR -eq 3 ]];
then
	echo -e "\e[92m[+]\e[0m This looks to be a GCP instance - running install"
	sleep 3
	gcp_install
	exit
else
	echo -e "\e[91m[-]\e[0m ERROR: Could not determine what device this is"
	echo -e "\e[93m[!]\e[0m ACTION: You can force an installation like so"
	echo -e $HELP
fi
